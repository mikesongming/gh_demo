name: build
# Build Source and Wheel Packages

on:
  workflow_call:
    inputs:
      need_wheel:
        default: true
        required: false
        type: boolean
      need_sdist: 
        default: true
        required: false
        type: boolean
    outputs:
      sdist_artifact:
        description: artifact name of sdist
        value: ${{ jobs.build_sdist.outputs.sdist_artifact }}
      pkg_name:
        description: name of sdist
        value: ${{ jobs.build_sdist.outputs.pkg_name }}
      pkg_version:
        description: version of sdist
        value: ${{ jobs.build_sdist.outputs.pkg_version }}

defaults:
  run:
    shell: bash

jobs:
  build_wheels:
    name: CIBW (${{matrix.buildplat[0]}}_${{matrix.python}})
    if: ${{ inputs.need_wheel }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        buildplat:
          - [ubuntu-20.04, manylinux_x86_64]
          - [macos-11, macosx_x86_64]
          # - [macos-12, macosx_x86_64]
          - [windows-2019, win_amd64]
        python: 
          # - 'cp39'
          - 'cp310'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python3
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Build wheel with CIBW
        uses: pypa/cibuildwheel@v2.6.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
          CIBW_TEST_REQUIRES: pytest pytest-cov
          CIBW_TEST_COMMAND: pytest -v {package}/tests

      - name: Upload wheel as Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: >- 
            wheel_${{ startsWith(matrix.buildplat[0], 'ubuntu') && 'linux' || 
              (
                startsWith(matrix.buildplat[0], 'macos') && 'macos' || 'windows'
              )
            }}
          path: wheelhouse/*.whl
          retention-days: 3

  build_sdist:
    name: ðŸ“¦ build sdist
    if: ${{ inputs.need_sdist }}
    runs-on: ubuntu-latest
    outputs:
      sdist_artifact:    ${{ steps.save.outputs.sdist_artifact }}
      pkg_name:    ${{ steps.save.outputs.pkg_name }}
      pkg_version: ${{ steps.save.outputs.pkg_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist Package with Extension
        run: |
          python -m build -s
      
      - name: Extract sdist package info
        run: |
          bash .github/scripts/extract_sdist_info.sh

      - name: Upload sdist as Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: sdist_${{ env.pkg_tag }}
          path: ${{ env.pkg_sdist }}
          retention-days: 3
      
      - name: Write outputs 
        id: save
        run: |
          echo "::set-output name=sdist_artifact::sdist_${{ env.pkg_tag }}"
          echo "::set-output name=pkg_name::"${{ env.pkg_name }}
          echo "::set-output name=pkg_version::"${{ env.pkg_version }}
