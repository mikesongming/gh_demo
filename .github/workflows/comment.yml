name: comment

on:
  workflow_call:
    inputs:
      artifact_name:
        description: name of the artifact of test reports
        default: test_reports
        required: false
        type: string
      create-new-comment:
        description: create new commend or update the old one
        default: false
        required: false
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  commentPR:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request }}
    steps:
      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: test_reports

      - name: Pytest coverage comment
        id: coverageComment
        if: ${{ github.event.pull_request && matrix.os == 'ubuntu-latest' }}
        uses: MishaKav/pytest-coverage-comment@main
        with:
          create-new-comment: ${{ inputs.create-new-comment }}
          pytest-coverage-path: ./test_reports/coverage.txt
          junitxml-path: ./test_reports/unit.xml

      - name: Create Awesome Badge
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: dd3e15d244cda22f8a22b79ba575448d
          filename: gh_demo_ci.json
          label: coverage
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
