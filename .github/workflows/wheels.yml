name: Wheels built

on:
  push:
  pull_request:
  issue_comment:
    types: [created]
  schedule: 
    - cron: "30 1 * * 4"
  workflow_dispatch:

jobs:
  # get_commit_message:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     message: ${{ steps.commit_message.outputs.message }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Get commit message
  #       id: commit_message
  #       run: |
  #         set -xe
  #         COMMIT_MSG=$(git log --no-merges -1 --oneline)
  #         echo "::set-output name=message::$COMMIT_MSG"
  #         echo github.ref ${{ github.ref }}
  #         echo 'head_commit.message>'  "${{ github.event.head_commit.message }}"
  #         echo 'action>' ${{ github.event.action }}
  #         echo 'comment.body>' ${{ github.event.comment.body }}

  test_build:
    # needs: get_commit_message
    uses: ./.github/workflows/build.yml 
    if: >- 
      contains(github.event.head_commit.message, '[wheel build]') ||
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'pull_request' && contains(github.event.action, 'opened')) ||
      (github.event.issue.pull_request && github.event.comment.body == '/build')
    with:
      need_wheel: false
      need_sdist: false
      ref: $GITHUB_REF
      ref_name: $GITHUB_REF_NAME
      head_sha: ${{ github.event.pull_request.head.sha }}
  
  debug_build:
    runs-on: ubuntu-latest
    needs: test_build
    steps:
      - run: | 
          echo ${{ needs.test_build.outputs.pkg_name }}
          echo ${{ needs.test_build.outputs.pkg_version }}
      
      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist

      - name: Download all wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheelhouse

      - run: |
          ls -R

  test_test:
    needs: test_build
    uses: ./.github/workflows/test.yml
    with:
      os: Linux
      python_version: "3.10"
    secrets: inherit
  
  debug_test:
    runs-on: ubuntu-latest
    needs: test_test
    env: 
      PASSED: ${{ needs.test_test.outputs.test_passed }}
    steps:
      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.test_test.outputs.xml_reports }}
          path: test_reports

      - name: List Reports 
        run: |
          ls -a ./test_reports
          [ ${PASSED} ] && echo 'Tests passed!'

  test_comment:
    needs: test_test
    if: ${{ github.event.pull_request || github.event.issue.pull_request }}
    uses: ./.github/workflows/comment.yml

  test_publish:
    name: âœ¨ publish to PYPY
    needs: [test_build, test_test]
    runs-on: ubuntu-latest
    if: >-
      needs.test_test.outputs.test_passed
    steps:
      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist

      - name: Download all wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
          print_hash: true
